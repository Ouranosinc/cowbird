# NOTE:
#   This file is employed by default to run tests to validate example configuration.
#   Live instances should create a copy as 'cowbird.ini' in the same directory,
#   or another INI file location provided via environment variables
#   (see https://pavics-cowbird.readthedocs.io/en/latest/configuration.html#loading-settings).

###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[composite:main]
use = egg:Paste#urlmap
/ = cowbird_app
#/api = api_app
#/cowbird/api = api_app

[app:cowbird_app]
use = egg:cowbird
filter-with = urlprefix

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =

## mongodb
mongo_uri = mongodb://0.0.0.0:27017/cowbird

## cowbird
# see 'Configuration' section of documentation for all options
cowbird.port = 7000
cowbird.url = http://0.0.0.0:7000
# The config path can be set here rather than using the environment variable `COWBIRD_CONFIG_PATH` but there is no
# default values, it requires an explicit specification.
# Note that the path should be relative to the mounted volume location if used within the Docker image.
cowbird.config_path = /config.yml

# SSL verification should be enabled for secured connections
# setting is available for convenience, debug purposes and local environments
# preferably, use specific request options (default value is true)
#cowbird.ssl_verify = true

# Adjust the default timeout of requests
#cowbird.request_timeout = 5

[app:api_app]
use = egg:Paste#static
document_root = %(here)s/ui/swagger

[filter:urlprefix]
use = egg:PasteDeploy#prefix
# prefix must be adjusted according to 'cowbird_URL' / 'cowbird.url'
prefix = /cowbird
# if the service is behind a reverse-proxy, the public port can be force here
# (an empty string can be used for the default scheme port)
#force_port =

###
# wsgi server configuration
###

[server:main]
use = egg:gunicorn#main
host = 0.0.0.0
port=7000
timeout=10
workers=3
threads=4

###
# celery scheduler config
# https://pypi.python.org/pypi/pyramid_celery
###
[celery]
use_celeryconfig = True

[loggers]
keys = root, cowbird, celery

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console
formatter = generic

[logger_cowbird]
level = INFO
handlers =
qualname = cowbird
formatter = generic

[logger_celery]
level = INFO
handlers = console
qualname = celery
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stdout,)
level = NOTSET
formatter = generic

[formatter_generic]
format = [%(asctime)s] %(levelname)-10.10s [%(threadName)s][%(name)s] %(message)s
