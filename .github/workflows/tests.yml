# run test suites

name: Tests
on:
  - pull_request
  - push

jobs:
  # see: https://github.com/fkirc/skip-duplicate-actions
  skip_duplicate:
    continue-on-error: true
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          concurrent_skipping: "same_content"
          skip_after_successful_duplicate: "true"
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'

  # see: https://github.com/actions/setup-python
  tests:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip != 'true' }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow-failure }}
    env:
      # override make command to install directly in active python
      CONDA_COMMAND: ""
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8"]
        allow-failure: [false]
        test-case: [test-github]  # add other test variations to run for every python/os/failure combinations
        # tests with single run
        include:
          # linter tests
          - os: ubuntu-latest
            python-version: 3.7
            allow-failure: false
            test-case: check
          # docker smoke tests
          - os: ubuntu-latest
            python-version: 3.7
            allow-failure: false
            test-case: test-docker
          # coverage tests
          - os: ubuntu-latest
            python-version: 3.7
            allow-failure: false
            test-case: coverage
          # experimental versions
          - os: ubuntu-latest
            python-version: 3.9
            allow-failure: true
            test-case: test-github
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Start containers
        run: make docker-up-dev-detached
      - name: Install Dependencies
        run: make install-pkg install-dev version
      - name: Display Packages
        run: pip freeze
      - name: Setup Environment Variables
        uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ./tests/ci/test.env
      - name: Display Environment Variables
        run: |
          hash -r
          env | sort
      - name: Prepare workspace dir for tests that require access permissions
        run: |
          sudo chown -R runner:docker $(cat ./docker/.env.example | grep WORKSPACE_DIR | cut -d "=" -f2)
      - name: Run Tests
        run: make stop ${{ matrix.test-case }}
      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        if: ${{ success() && matrix.test-case == 'coverage' }}
        with:
          files: ./reports/coverage.xml
          fail_ci_if_error: true
          verbose: true
